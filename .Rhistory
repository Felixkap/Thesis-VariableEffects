effect_se_boxplot
###### Simulation Setup
n <- 200 ; num.trees <- 200 ; repeats <- 1e2
formulas <- c("2*x.1+e", "3*sqrt(abs(x.1))+3*x.1+e")
#formulas <- c("-0.5*x.1^3+4*x.2+x.3^2+e", "0.5*sqrt(abs(x.1))+3*x.2+e")
scenarios <- data.frame(expand.grid(n, num.trees, formulas, repeats))
colnames(scenarios) = c("N", "N_Trees", "Formula", "Repeats")
scenarios[,"Formula"] <- as.character(scenarios[,"Formula"]) ### Formula became Factor
scenarios <- split(scenarios, seq(nrow(scenarios)))
system.time(result <- lapply(X = scenarios,
FUN = sim_multi))
sim_results_long <- create_longformat(result)
n_scenarios <- length(result)
scenario_names <- character(n_scenarios)
for (i in 1:n_scenarios) {
scenario_names[i] <- result[[i]]$formula
}
names(scenario_names) <- 1:n_scenarios
max_vars <- 0
for (res in result) {
n_vars <- length(unique(unlist(str_extract_all(res$formula,"x.[0-9]"))))
if (n_vars > max_vars) {
max_vars = n_vars
}
}
effect_names <- character(length = max_vars)
se_cov_names <- character(length = max_vars)
se_direct_names <- character(length = max_vars)
for (i in 1:max_vars) {
effect_names[i] <- paste0('X', i)
se_cov_names[i] <- paste0('X', i)
se_direct_names[i] <- paste0('X', i)
}
names(effect_names) <- paste0('effect.x.', 1:max_vars)
names(se_cov_names) <- paste0('se.cov.x.', 1:max_vars)
names(se_direct_names) <- paste0('se.direct.x.', 1:max_vars)
effect_effect_plot <- subset(sim_results_long, grepl("^effect", metric), drop = TRUE) %>%
ggplot(aes(x = value)) +
facet_grid(scenario~metric, labeller = labeller(scenario = as_labeller(scenario_names),
metric = as_labeller(effect_names)))+
geom_histogram(aes(y = after_stat(density)), color = 'black') +
geom_density(alpha = .2, fill = "#FF6666") +
labs(x = 'Variable Effect Estimates',
title = 'Distribution of Variable Effect Estimates')+
theme(strip.background=element_rect(fill=NA, color=NA),
strip.text = element_text(size = 8))
effect_se_plot <- subset(sim_results_long, grepl("^se.cov", metric), drop = TRUE) %>%
ggplot(aes(x = value)) +
facet_grid(scenario~metric, labeller = labeller(scenario = as_labeller(scenario_names),
metric = as_labeller(se_cov_names)))+
geom_histogram(aes(y = after_stat(density)), color = 'black') +
geom_density(alpha = .2, fill = "#FF6666") +
labs(x = 'Standard Error Estimates',
title = 'Distribution of (Cov) Standard Error Estimates of Variable Effects')+
theme(strip.background=element_rect(fill=NA, color=NA),
strip.text = element_text(size = 8))
effect_se2_plot <- subset(sim_results_long, grepl("^se.direct", metric), drop = TRUE) %>%
ggplot(aes(x = value)) +
facet_grid(scenario~metric, labeller = labeller(scenario = as_labeller(scenario_names),
metric = as_labeller(se_direct_names)))+
geom_histogram(aes(y = after_stat(density)), color = 'black') +
geom_density(alpha = .2, fill = "#FF6666") +
labs(x = 'Standard Error Estimates',
title = 'Distribution of (direct) Standard Error Estimates of Variable Effects')+
theme(strip.background=element_rect(fill=NA, color=NA),
strip.text = element_text(size = 8))
effect_boxplot <- subset(sim_results_long, grepl("^effect", metric), drop = TRUE) %>%
ggplot(aes(x = scenario, y = value, color = scenario)) +
facet_wrap(~metric, labeller = labeller(metric = as_labeller(effect_names)))+
geom_boxplot() +
labs(x = 'Scenarios',
title = 'Distribution of Variable Effect Estimates')+
theme(strip.background=element_rect(fill=NA, color=NA))
effect_se_boxplot <- subset(sim_results_long, !grepl("^effect", metric), drop = TRUE) %>%
mutate(se_cov=if_any(metric, function(x){grepl('cov',x)})) %>%
mutate(variable=str_extract(metric, "x.[0-9]")) %>%
ggplot(aes(x = scenario, y = value, color = scenario)) +
facet_grid(se_cov~variable, labeller = labeller(se_cov = as_labeller(c(`TRUE` = 'SE Cov',
`FALSE` = 'SE Direct'))))+
geom_boxplot() +
labs(x = 'Scenarios',
y = 'Standard Error Estimate',
title = 'Distribution of Standard Error Estimates of Variable Effects')+
theme(strip.background=element_rect(fill=NA, color=NA))
effect_effect_plot
effect_se_plot
effect_se2_plot
effect_boxplot
effect_se_boxplot
rm(list=ls())
library(latex2exp)
library(Matrix)
library(tidyverse)
library(ggplot2)
library(ggpubr)
library(ranger)
library(MixMatrix)
library(mvtnorm)
library(stringr)
library(parallel)
#cores <- detectCores()
#clust <- makeCluster(cores)
source('C:/Users/feix_/iCloudDrive/Studium Master/CQM - Thesis Internship/Thesis-VariableEffects/Baseline_MultipleVariable.R')
#parallel::clusterEvalQ(clust,
#                       expr = {source('C:/Users/feix_/iCloudDrive/Studium Master/CQM - Thesis #Internship/Thesis-VariableEffects/Baseline_MultipleVariable.R')})
###### Simulation Setup
n <- 200 ; num.trees <- 200 ; repeats <- 1e2
formulas <- c("2*x.1+e", "3*sqrt(abs(x.1))+3*x.1+e")
#formulas <- c("-0.5*x.1^3+4*x.2+x.3^2+e", "0.5*sqrt(abs(x.1))+3*x.2+e")
scenarios <- data.frame(expand.grid(n, num.trees, formulas, repeats))
colnames(scenarios) = c("N", "N_Trees", "Formula", "Repeats")
scenarios[,"Formula"] <- as.character(scenarios[,"Formula"]) ### Formula became Factor
scenarios <- split(scenarios, seq(nrow(scenarios)))
system.time(result <- lapply(X = scenarios,
FUN = sim_multi))
plot_results(result)
###### Simulation Setup
n <- 200 ; num.trees <- 2000 ; repeats <- 1e3; cor <- 0.7
formulas <- c("2*x.1^3+2*x.2^2-0.5*x.3^3+0.2*x.3^4+e",
"-0.5*x.1^3+3*x.2+x.3^2+0.5*sqrt(abs(x.4))+e")
scenarios <- data.frame(expand.grid(n, num.trees, formulas, repeats, cor))
colnames(scenarios) = c("N", "N_Trees", "Formula", "Repeats", "Correlation")
scenarios[,"Formula"] <- as.character(scenarios[,"Formula"]) ### Formula became Factor
scenarios <- split(scenarios, seq(nrow(scenarios)))
###### Simulation Setup
n <- 200 ; num.trees <- 2000 ; repeats <- 1e1; cor <- 0
formulas <- c("2*x.1^3+2*x.2^2-0.5*x.3^3+0.2*x.4^4+e",
"-0.5*x.1^3+3*x.2+x.3^2+0.5*sqrt(abs(x.4))+e")
scenarios <- data.frame(expand.grid(n, num.trees, formulas, repeats))
colnames(scenarios) = c("N", "N_Trees", "Formula", "Repeats", "Correlation")
scenarios[,"Formula"] <- as.character(scenarios[,"Formula"]) ### Formula became Factor
n <- 200 ; num.trees <- 2000 ; repeats <- 1e1; cor <- 0
formulas <- c("2*x.1^3+2*x.2^2-0.5*x.3^3+0.2*x.4^4+e",
"-0.5*x.1^3+3*x.2+x.3^2+0.5*sqrt(abs(x.4))+e")
scenarios <- data.frame(expand.grid(n, num.trees, formulas, repeats, cor))
colnames(scenarios) = c("N", "N_Trees", "Formula", "Repeats", "Correlation")
scenarios[,"Formula"] <- as.character(scenarios[,"Formula"]) ### Formula became Factor
scenarios <- split(scenarios, seq(nrow(scenarios)))
source("C:/Users/feix_/iCloudDrive/Studium Master/CQM - Thesis Internship/Thesis-VariableEffects/Baseline_MultipleVariable.R", echo=TRUE)
source("C:/Users/feix_/iCloudDrive/Studium Master/CQM - Thesis Internship/Thesis-VariableEffects/Baseline_MultipleVariable.R", echo=TRUE)
source("C:/Users/feix_/iCloudDrive/Studium Master/CQM - Thesis Internship/Thesis-VariableEffects/Baseline_MultipleVariable.R", echo=TRUE)
source("C:/Users/feix_/iCloudDrive/Studium Master/CQM - Thesis Internship/Thesis-VariableEffects/Baseline_MultipleVariable.R", echo=TRUE)
source("C:/Users/feix_/iCloudDrive/Studium Master/CQM - Thesis Internship/Thesis-VariableEffects/Baseline_MultipleVariable.R", echo=TRUE)
source("C:/Users/feix_/iCloudDrive/Studium Master/CQM - Thesis Internship/Thesis-VariableEffects/Baseline_MultipleVariable.R", echo=TRUE)
plot_results <- function(result){
sim_results_long <- create_longformat(result)
n_scenarios <- length(result)
scenario_names <- character(n_scenarios)
for (i in 1:n_scenarios) {
if (nchar(result[[i]]$formula)> 25) {
scenario_names[i] <- split_formula(result[[i]]$formula)
} else {
scenario_names[i] <- result[[i]]$formula
}
}
names(scenario_names) <- 1:n_scenarios
max_vars <- 0
for (res in result) {
n_vars <- length(unique(unlist(str_extract_all(res$formula,"x.[0-9]"))))
if (n_vars > max_vars) {
max_vars = n_vars
}
}
effect_names <- character(length = max_vars)
se_cov_names <- character(length = max_vars)
#se_direct_names <- character(length = max_vars)
for (i in 1:max_vars) {
effect_names[i] <- paste0('X', i)
se_cov_names[i] <- paste0('X', i)
# se_direct_names[i] <- paste0('X', i)
}
names(effect_names) <- paste0('effect.x.', 1:max_vars)
names(se_cov_names) <- paste0('se.cov.x.', 1:max_vars)
#names(se_direct_names) <- paste0('se.direct.x.', 1:max_vars)
effect_effect_plot <- subset(sim_results_long, grepl("^effect", metric), drop = TRUE) %>%
ggplot(aes(x = value)) +
facet_grid(scenario~metric, scale="free",
labeller = labeller(scenario = as_labeller(scenario_names),
metric = as_labeller(effect_names)))+
geom_histogram(aes(y = after_stat(density)), binwidth = 0.05, color = 'black') +
geom_density(alpha = .2, fill = "#FF6666") +
labs(x = 'Variable Effect Estimates',
title = 'Distribution of Variable Effect Estimates')+
theme(strip.background=element_rect(fill=NA, color=NA),
strip.text = element_text(size = 8))
effect_se_plot <- subset(sim_results_long, grepl("^se.cov", metric), drop = TRUE) %>%
ggplot(aes(x = value)) +
facet_grid(scenario~metric, scale="free",
labeller = labeller(scenario = as_labeller(scenario_names),
metric = as_labeller(se_cov_names)))+
geom_histogram(aes(y = after_stat(density)), binwidth = 0.05, color = 'black') +
geom_density(alpha = .2, fill = "#FF6666") +
labs(x = 'Standard Error Estimates',
title = 'Distribution of (Cov) Standard Error Estimates of Variable Effects')+
theme(strip.background=element_rect(fill=NA, color=NA),
strip.text = element_text(size = 8))
# effect_se2_plot <- subset(sim_results_long, grepl("^se.direct", metric), drop = TRUE) %>%
#   ggplot(aes(x = value)) +
#   facet_grid(scenario~metric, scale="free",
#              labeller = labeller(scenario = as_labeller(scenario_names),
#                                                   metric = as_labeller(se_direct_names)))+
#   geom_histogram(aes(y = after_stat(density)), binwidth = 0.05, color = 'black') +
#   geom_density(alpha = .2, fill = "#FF6666") +
#   labs(x = 'Standard Error Estimates',
#        title = 'Distribution of (direct) Standard Error Estimates of Variable Effects')+
#   theme(strip.background=element_rect(fill=NA, color=NA),
#         strip.text = element_text(size = 8))
effect_boxplot <- subset(sim_results_long, grepl("^effect", metric), drop = TRUE) %>%
ggplot(aes(x = scenario, y = value, color = scenario)) +
facet_wrap(~metric, scale="free",
labeller = labeller(metric = as_labeller(effect_names)))+
geom_boxplot() +
labs(x = 'Scenarios',
title = 'Distribution of Variable Effect Estimates')+
theme(strip.background=element_rect(fill=NA, color=NA))
print(subset(sim_results_long, !grepl("^effect", metric), drop = TRUE))
effect_se_boxplot <- subset(sim_results_long, !grepl("^effect", metric), drop = TRUE) %>%
#  mutate(se_cov=if_any(metric, function(x){grepl('cov',x)})) %>%
# mutate(variable=str_extract(metric, "x.[0-9]")) %>%
ggplot(aes(x = scenario, y = value, color = scenario)) +
# facet_grid(se_cov~variable, labeller = labeller(se_cov = as_labeller(c(`TRUE` = 'SE Cov',
#                                                                        `FALSE` = 'SE Direct'))))+
facet_wrap(~variable)+
geom_boxplot() +
labs(x = 'Scenarios',
y = 'Standard Error Estimate',
title = 'Distribution of Standard Error Estimates of Variable Effects')+
theme(strip.background=element_rect(fill=NA, color=NA))
return(list(effect = effect_effect_plot,
se = effect_se_plot,
#   se2 = effect_se2_plot,
effect_box = effect_boxplot,
se_box = effect_se_boxplot))
}
# Run Simulation
system.time(result <- lapply(X = scenarios, FUN = sim_multi))
source("C:/Users/feix_/iCloudDrive/Studium Master/CQM - Thesis Internship/Thesis-VariableEffects/Baseline_MultipleVariable.R", echo=TRUE)
source("C:/Users/feix_/iCloudDrive/Studium Master/CQM - Thesis Internship/Thesis-VariableEffects/Baseline_MultipleVariable.R", echo=TRUE)
source("C:/Users/feix_/iCloudDrive/Studium Master/CQM - Thesis Internship/Thesis-VariableEffects/Baseline_MultipleVariable.R", echo=TRUE)
source("C:/Users/feix_/iCloudDrive/Studium Master/CQM - Thesis Internship/Thesis-VariableEffects/Baseline_MultipleVariable.R", echo=TRUE)
source('C:/Users/feix_/iCloudDrive/Studium Master/CQM - Thesis Internship/Thesis-VariableEffects/Merf.R')
source('C:/Users/feix_/iCloudDrive/Studium Master/CQM - Thesis Internship/Thesis-VariableEffects/RangerPredictFunction.R')
source('C:/Users/feix_/iCloudDrive/Studium Master/CQM - Thesis Internship/Thesis-VariableEffects/Merf.R')
rm(list=ls())
library(Matrix)
library(tidyverse)
library(ggplot2)
library(ggpubr)
library(ranger)
library(MixMatrix)
library(mvtnorm)
library(stringr)
source('C:/Users/feix_/iCloudDrive/Studium Master/CQM - Thesis Internship/Thesis-VariableEffects/RangerPredictFunction.R')
source('C:/Users/feix_/iCloudDrive/Studium Master/CQM - Thesis Internship/Thesis-VariableEffects/Merf.R')
source('C:/Users/feix_/iCloudDrive/Studium Master/CQM - Thesis Internship/Thesis-VariableEffects/Merfs.R')
source('C:/Users/feix_/iCloudDrive/Studium Master/CQM - Thesis Internship/Thesis-VariableEffects/Merf.R')
source('C:/Users/feix_/iCloudDrive/Studium Master/CQM - Thesis Internship/Thesis-VariableEffects/RangerPredictFunction.R')
source('C:/Users/feix_/iCloudDrive/Studium Master/CQM - Thesis Internship/Thesis-VariableEffects/RangerPredictFunction.R')
2**2
source('C:/Users/feix_/iCloudDrive/Studium Master/CQM - Thesis Internship/Thesis-VariableEffects/Merf.R')
source('C:/Users/feix_/iCloudDrive/Studium Master/CQM - Thesis Internship/Thesis-VariableEffects/Merf.R')
rm(list=ls())
library(Matrix)
library(tidyverse)
library(ggplot2)
library(ggpubr)
library(ranger)
library(MixMatrix)
library(mvtnorm)
library(stringr)
source('C:/Users/feix_/iCloudDrive/Studium Master/CQM - Thesis Internship/Thesis-VariableEffects/RangerPredictFunction.R')
source('C:/Users/feix_/iCloudDrive/Studium Master/CQM - Thesis Internship/Thesis-VariableEffects/Merf.R')
rm(list=ls())
library(Matrix)
library(tidyverse)
library(ggplot2)
library(ggpubr)
library(ranger)
library(MixMatrix)
library(mvtnorm)
library(stringr)
source('C:/Users/feix_/iCloudDrive/Studium Master/CQM - Thesis Internship/Thesis-VariableEffects/RangerPredictFunction.R')
source('C:/Users/feix_/iCloudDrive/Studium Master/CQM - Thesis Internship/Thesis-VariableEffects/Merf.R')
source('C:/Users/feix_/iCloudDrive/Studium Master/CQM - Thesis Internship/Thesis-VariableEffects/Merf.R')
source('C:/Users/feix_/iCloudDrive/Studium Master/CQM - Thesis Internship/Thesis-VariableEffects/Merf.R')
source('C:/Users/feix_/iCloudDrive/Studium Master/CQM - Thesis Internship/Thesis-VariableEffects/Merf.R')
rm(list=ls())
source('C:/Users/feix_/iCloudDrive/Studium Master/CQM - Thesis Internship/Thesis-VariableEffects/Merf.R')
source('C:/Users/feix_/iCloudDrive/Studium Master/CQM - Thesis Internship/Thesis-VariableEffects/Merf.R')
rm(list=ls())
source('C:/Users/feix_/iCloudDrive/Studium Master/CQM - Thesis Internship/Thesis-VariableEffects/Merf.R')
source('C:/Users/feix_/iCloudDrive/Studium Master/CQM - Thesis Internship/Thesis-VariableEffects/RangerPredictFunction.R')
source('C:/Users/feix_/iCloudDrive/Studium Master/CQM - Thesis Internship/Thesis-VariableEffects/RangerPredictFunction.R')
rm(list=ls())
source('C:/Users/feix_/iCloudDrive/Studium Master/CQM - Thesis Internship/Thesis-VariableEffects/RangerPredictFunction.R')
source('C:/Users/feix_/iCloudDrive/Studium Master/CQM - Thesis Internship/Thesis-VariableEffects/Merf.R')
cool <- function(x){}
rm(list=ls())
source('C:/Users/feix_/iCloudDrive/Studium Master/CQM - Thesis Internship/Thesis-VariableEffects/Merf.R')
source('C:/Users/feix_/iCloudDrive/Studium Master/CQM - Thesis Internship/Thesis-VariableEffects/Merf.R')
source('C:/Users/feix_/iCloudDrive/Studium Master/CQM - Thesis Internship/Thesis-VariableEffects/Merf.R')
source('C:/Users/feix_/iCloudDrive/Studium Master/CQM - Thesis Internship/Thesis-VariableEffects/Merf.R')
rm(list=ls())
source('C:/Users/feix_/iCloudDrive/Studium Master/CQM - Thesis Internship/Thesis-VariableEffects/Merf.R')
source('C:/Users/feix_/iCloudDrive/Studium Master/CQM - Thesis Internship/Thesis-VariableEffects/Merf.R')
source('C:/Users/feix_/iCloudDrive/Studium Master/CQM - Thesis Internship/Thesis-VariableEffects/Merf.R')
source('C:/Users/feix_/iCloudDrive/Studium Master/CQM - Thesis Internship/Thesis-VariableEffects/Merf.R')
rm(list=ls())
source('C:/Users/feix_/iCloudDrive/Studium Master/CQM - Thesis Internship/Thesis-VariableEffects/Merf.R')
MERFranger <- function(Y,
X,
random,
data,
num.trees,
importance = "none",
keep.inbag = TRUE,
initialRandomEffects = 0,
ErrorTolerance = 0.0001,
MaxIterations = 25,
na.rm = TRUE) {
if (na.rm == TRUE) {
comp_smp <- complete.cases(data)
data <- data[comp_smp, ]
Y <- Y[comp_smp]
X <- X[comp_smp, ]
}
input_checks_MERF(
Y = Y, X = X, data = data, initialRandomEffects = initialRandomEffects,
ErrorTolerance = ErrorTolerance, MaxIterations = MaxIterations,
importance = importance, na.rm = na.rm
)
Target <- Y
ContinueCondition <- TRUE
iterations <- 0
AdjustedTarget <- Target - initialRandomEffects
oldLogLik <- 0
while (ContinueCondition) {
iterations <- iterations + 1
rf <- ranger::ranger(x = X, y = AdjustedTarget,
importance = importance,
num.trees = num.trees,
keep.inbag = keep.inbag)
forest_preds <- rf$predictions
f0 <- as.formula(paste0("Target ~ -1+", random))
lmefit <- lme4::lmer(f0, data = data, REML = FALSE, offset = forest_preds)
newLogLik <- as.numeric(stats::logLik(lmefit))
ContinueCondition <- (abs(abs(newLogLik - oldLogLik[iterations]) / oldLogLik[iterations]) > ErrorTolerance &
iterations < MaxIterations)
oldLogLik <- c(oldLogLik, newLogLik)
AllEffects <- predict(lmefit)
AdjustedTarget <- Target - (AllEffects - forest_preds)
}
data$forest_preds <- NULL
residuals <- Target - predict(lmefit)
result <- list(
Forest = rf,
EffectModel = lmefit,
RandomEffects = lme4::ranef(lmefit),
RanEffSD = as.data.frame(lme4::VarCorr(lmefit))$sdcor[1],
ErrorSD = stats::sigma(lmefit),
VarianceCovariance = lme4::VarCorr(lmefit),
LogLik = oldLogLik,
IterationsUsed = iterations,
OOBresiduals = residuals,
Random = random,
ErrorTolerance = ErrorTolerance,
initialRandomEffects = initialRandomEffects,
MaxIterations = MaxIterations
)
class(result) <- "MERFranger"
return(result)
}
source('C:/Users/feix_/iCloudDrive/Studium Master/CQM - Thesis Internship/Thesis-VariableEffects/Merf.R')
source('C:/Users/feix_/iCloudDrive/Studium Master/CQM - Thesis Internship/Thesis-VariableEffects/Merf.R')
rm(list=ls())
library(Matrix)
library(tidyverse)
library(ggplot2)
library(ggpubr)
library(ranger)
library(MixMatrix)
library(mvtnorm)
library(stringr)
source('C:/Users/feix_/iCloudDrive/Studium Master/CQM - Thesis Internship/Thesis-VariableEffects/RangerPredictFunction.R')
source('C:/Users/feix_/iCloudDrive/Studium Master/CQM - Thesis Internship/Thesis-VariableEffects/RangerPredictFunction.R')
source("C:/Users/feix_/iCloudDrive/Studium Master/CQM - Thesis Internship/Thesis-VariableEffects/Baseline_MultipleVariable.R", echo=TRUE)
source("C:/Users/feix_/iCloudDrive/Studium Master/CQM - Thesis Internship/Thesis-VariableEffects/Baseline_MultipleVariable.R", echo=TRUE)
source("C:/Users/feix_/iCloudDrive/Studium Master/CQM - Thesis Internship/Thesis-VariableEffects/Baseline_MultipleVariable.R", echo=TRUE)
###### Simulation Setup
n <- c(5000, 10000) ; num.trees <- 1000 ; repeats <- 100; cor <- c(0, 0.8); k <- c(1,0.5, 0.2)
formulas <- c("2*x.1+4*x.2-0.5*x.3") #"-0.5*x.1^3+3*x.2+0.5*sqrt(abs(x.3))"
scenarios <- data.frame(expand.grid(n, num.trees, formulas, repeats, cor))
colnames(scenarios) = c("N", "N_Trees", "Formula", "Repeats", "Correlation")
scenarios[,"Formula"] <- as.character(scenarios[,"Formula"]) ### Formula became Factor
scenarios <- split(scenarios, seq(nrow(scenarios)))
# Run Simulation
system.time(result <- parLapply(cl = clust,
X = scenarios,
fun = sim_multi))
library(Matrix)
library(tidyverse)
library(ggplot2)
library(ggpubr)
library(ranger)
library(MixMatrix)
library(mvtnorm)
library(stringr)
library(parallel)
source('C:/Users/feix_/iCloudDrive/Studium Master/CQM - Thesis Internship/Thesis-VariableEffects/Baseline_MultipleVariableWorking.R')
source("C:/Users/feix_/iCloudDrive/Studium Master/CQM - Thesis Internship/Thesis-VariableEffects/Baseline_MultipleVariableWorking.R", echo=TRUE)
plot_results <- function(result){
mylist <- vector(mode = 'list', length = length(result)*3)
cnt <- 1 ; max_vars <- 0
for (res_i in 1:length(result)) {
for (j in 6:8) {
current_var_names <- unique(unlist(str_extract_all(result[[res_i]][['formula']],"x.[0-9]")))
if (length(current_var_names) > max_vars) {
var_names <- current_var_names
max_vars <- length(var_names)
}
dat_tmp <- data.frame(x=result[[res_i]][[j]])
dat <- cbind(dat_tmp,
N = paste('N=', result[[res_i]]$N),
cor = paste('Cor=', result[[res_i]]$cor),
k = paste('k=', result[[res_i]]$k),
names(result[[res_i]])[j])
names(dat)[length(names(dat))] <- 'effect.type'
mylist[[cnt]] <-  dat %>%
pivot_longer(cols = starts_with('x.'), names_to = 'variable')
cnt <- cnt + 1
}
}
mydat <- do.call('rbind', mylist)
mydat$effect.type <- as.factor(mydat$effect.type)
levels(mydat$effect.type) <- c(effects.f.sample='True.F',
effects.lm='LM',
effects.rf='RF')
df2 <- data.frame(variable = var_names, value = result[[1]]$effects.f.true[1,])
plot_result <- ggplot(mydat, aes(x = value, y=effect.type)) +
ggh4x::facet_grid2(variable~N+cor+k, scales="free_x", independent = "x")+
geom_boxplot(aes(fill=effect.type)) +
geom_vline(data=df2, aes(xintercept=value, color='TrueEffect')) +
labs(y = 'Model', x = 'Effect Estimates', fill = "Model") +
scale_color_manual(name = "", values = c(TrueEffect = "orange"))
return(plot_result)
}
result_plots <- plot_results(result)
result_plots
4
library(Matrix)
library(tidyverse)
library(ggplot2)
library(ggpubr)
library(ranger)
library(MixMatrix)
library(mvtnorm)
library(stringr)
library(parallel)
source('C:/Users/feix_/iCloudDrive/Studium Master/CQM - Thesis Internship/Thesis-VariableEffects/Baseline_MultipleVariableWorking.R')
cores <- detectCores()
clust <- makeCluster(cores)
library(Matrix)
library(tidyverse)
library(ggplot2)
library(ggpubr)
library(ranger)
library(MixMatrix)
library(mvtnorm)
library(stringr)
library(parallel)
source('C:/Users/feix_/iCloudDrive/Studium Master/CQM - Thesis Internship/Thesis-VariableEffects/Baseline_MultipleVariableWorking.R')
cores <- detectCores()
clust <- makeCluster(cores)
parallel::clusterEvalQ(clust,
expr = {source('C:/Users/feix_/iCloudDrive/Studium Master/CQM - Thesis Internship/Thesis-VariableEffects/Baseline_MultipleVariableWorking.R')})
###### Simulation Setup
n <- c(10) ; num.trees <- 10 ; repeats <- 20; cor <- c(0); k <- c(1)
formulas <- c("2*x.1+4*x.2-0.5*x.3") #"-0.5*x.1^3+3*x.2+0.5*sqrt(abs(x.3))"
scenarios <- data.frame(expand.grid(n, num.trees, formulas, repeats, cor, k))
colnames(scenarios) = c("N", "N_Trees", "Formula", "Repeats", "Correlation", "k")
scenarios[,"Formula"] <- as.character(scenarios[,"Formula"]) ### Formula became Factor
scenarios <- split(scenarios, seq(nrow(scenarios)))
#system.time(result <- lapply(X = scenarios, FUN = sim_multi))
#Run Simulation
system.time(result <- parLapply(cl = clust,
X = scenarios,
fun = sim_multi))
print_results(result)
result_plots <- plot_results(result)
result_plots
num.trees <- scenario[["N_Trees"]]
list(c('effects.rf',
'effects.lm'
#'effects.rf.true'
),
'effects.se.rf')
source("C:/Users/feix_/iCloudDrive/Studium Master/CQM - Thesis Internship/Thesis-VariableEffects/Baseline_MultipleVariableWorking.R", echo=TRUE)
source("C:/Users/feix_/iCloudDrive/Studium Master/CQM - Thesis Internship/Thesis-VariableEffects/Baseline_MultipleVariableWorking.R", echo=TRUE)
source("C:/Users/feix_/iCloudDrive/Studium Master/CQM - Thesis Internship/Thesis-VariableEffects/Baseline_MultipleVariableWorking.R", echo=TRUE)
source("C:/Users/feix_/iCloudDrive/Studium Master/CQM - Thesis Internship/Thesis-VariableEffects/Baseline_MultipleVariableWorking.R", echo=TRUE)
source("C:/Users/feix_/iCloudDrive/Studium Master/CQM - Thesis Internship/Thesis-VariableEffects/Baseline_MultipleVariableWorking.R", echo=TRUE)
source("C:/Users/feix_/iCloudDrive/Studium Master/CQM - Thesis Internship/Thesis-VariableEffects/Baseline_MultipleVariableWorking.R", echo=TRUE)
source("C:/Users/feix_/iCloudDrive/Studium Master/CQM - Thesis Internship/Thesis-VariableEffects/Baseline_MultipleVariableWorking.R", echo=TRUE)
source("C:/Users/feix_/iCloudDrive/Studium Master/CQM - Thesis Internship/Thesis-VariableEffects/Baseline_MultipleVariableWorking.R", echo=TRUE)
source("C:/Users/feix_/iCloudDrive/Studium Master/CQM - Thesis Internship/Thesis-VariableEffects/Baseline_MultipleVariableWorking.R", echo=TRUE)
source("C:/Users/feix_/iCloudDrive/Studium Master/CQM - Thesis Internship/Thesis-VariableEffects/Baseline_MultipleVariableWorking.R", echo=TRUE)
source("C:/Users/feix_/iCloudDrive/Studium Master/CQM - Thesis Internship/Thesis-VariableEffects/Baseline_MultipleVariableWorking.R", echo=TRUE)
source("C:/Users/feix_/iCloudDrive/Studium Master/CQM - Thesis Internship/Thesis-VariableEffects/Baseline_MultipleVariableWorking.R", echo=TRUE)
source("C:/Users/feix_/iCloudDrive/Studium Master/CQM - Thesis Internship/Thesis-VariableEffects/Baseline_MultipleVariableWorking.R", echo=TRUE)
source("C:/Users/feix_/iCloudDrive/Studium Master/CQM - Thesis Internship/Thesis-VariableEffects/Baseline_MultipleVariableWorking.R", echo=TRUE)
source("C:/Users/feix_/iCloudDrive/Studium Master/CQM - Thesis Internship/Thesis-VariableEffects/Baseline_MultipleVariableWorking.R", echo=TRUE)
source("C:/Users/feix_/iCloudDrive/Studium Master/CQM - Thesis Internship/Thesis-VariableEffects/Baseline_MultipleVariableWorking.R", echo=TRUE)
