rf <- ranger( formula = y ~ x,
data = data,
num.trees = 20,
keep.inbag = T)
new <- data.frame(x=rnorm(3))
rf.predict <- predict(rf, new, predict.all = T)
rf.predict2 <- RangerForestPredict(rf$forest,
new,
type='se',
predict.all = T,
inbag.counts = rf$inbag.counts)
rf.all.predictions <- rf.predict$predictions
rf.predictions <- rowMeans(rf.all.predictions)
rf2.all.predictions <- rf.predict2$predictions
rf2.predictions <- rowMeans(rf2.all.predictions)
rm(list=ls())
library(Matrix)
library(tidyverse)
library(ggplot2)
library(ggpubr)
library(ranger)
library(randomForest)
source('C:/Users/feix_/iCloudDrive/Studium Master/CQM - Thesis Internship/Thesis-VariableEffects/RangerPredictFunction.R')
set.seed(124)
n <- 200
x <- rnorm(n, 0, 1)
e <- rnorm(n, 0, 1)
y <- 2*x + e
data <- data.frame(x, y)
linreg <- lm(formula = y ~ x,
data = data)
linreg.predictions <- linreg$fitted.values
linreg.se <- predict(linreg, newdata = data, se.fit = T)$se.fit
rf <- ranger( formula = y ~ x,
data = data,
num.trees = 20,
keep.inbag = T)
new <- data.frame(x=rnorm(3))
rf.predict <- predict(rf, new, predict.all = T)
rf.predict2 <- RangerForestPredict(rf$forest,
new,
type='se',
predict.all = T,
inbag.counts = rf$inbag.counts)
rf.all.predictions <- rf.predict$predictions
rf.predictions <- rowMeans(rf.all.predictions)
rf2.all.predictions <- rf.predict2$predictions
rf2.predictions <- rowMeans(rf2.all.predictions)
new <- data.frame(x=rnorm(1))
rf.predict <- predict(rf, new, predict.all = T)
rf.predict2 <- RangerForestPredict(rf$forest,
new,
type='se',
predict.all = T,
inbag.counts = rf$inbag.counts)
rm(list=ls())
library(Matrix)
library(tidyverse)
library(ggplot2)
library(ggpubr)
library(ranger)
library(randomForest)
source('C:/Users/feix_/iCloudDrive/Studium Master/CQM - Thesis Internship/Thesis-VariableEffects/RangerPredictFunction.R')
set.seed(124)
n <- 200
x <- rnorm(n, 0, 1)
e <- rnorm(n, 0, 1)
y <- 2*x + e
data <- data.frame(x, y)
linreg <- lm(formula = y ~ x,
data = data)
linreg.predictions <- linreg$fitted.values
linreg.se <- predict(linreg, newdata = data, se.fit = T)$se.fit
rf <- ranger( formula = y ~ x,
data = data,
num.trees = 20,
keep.inbag = T)
new <- data.frame(x=rnorm(1))
rf.predict <- predict(rf, new, predict.all = T)
rf.predict2 <- RangerForestPredict(rf$forest,
new,
type='se',
predict.all = T,
inbag.counts = rf$inbag.counts)
rf.all.predictions <- rf.predict$predictions
rf.predictions <- rowMeans(rf.all.predictions)
rf2.all.predictions <- rf.predict2$predictions
rf2.predictions <- rowMeans(rf2.all.predictions)
rm(list=ls())
library(Matrix)
library(tidyverse)
library(ggplot2)
library(ggpubr)
library(ranger)
library(randomForest)
source('C:/Users/feix_/iCloudDrive/Studium Master/CQM - Thesis Internship/Thesis-VariableEffects/RangerPredictFunction.R')
set.seed(124)
n <- 200
x <- rnorm(n, 0, 1)
e <- rnorm(n, 0, 1)
y <- 2*x + e
data <- data.frame(x, y)
linreg <- lm(formula = y ~ x,
data = data)
linreg.predictions <- linreg$fitted.values
linreg.se <- predict(linreg, newdata = data, se.fit = T)$se.fit
rf <- ranger( formula = y ~ x,
data = data,
num.trees = 20,
keep.inbag = T)
new <- data.frame(x=rnorm(10))
rf.predict <- predict(rf, new, predict.all = T)
rf.predict2 <- RangerForestPredict(rf$forest,
new,
type='se',
predict.all = T,
inbag.counts = rf$inbag.counts)
rf.all.predictions <- rf.predict$predictions
rf.predictions <- rowMeans(rf.all.predictions)
rf2.all.predictions <- rf.predict2$predictions
rf2.predictions <- rowMeans(rf2.all.predictions)
rm(list=ls())
library(Matrix)
library(tidyverse)
library(ggplot2)
library(ggpubr)
library(ranger)
library(randomForest)
source('C:/Users/feix_/iCloudDrive/Studium Master/CQM - Thesis Internship/Thesis-VariableEffects/RangerPredictFunction.R')
set.seed(124)
n <- 200
x <- rnorm(n, 0, 1)
e <- rnorm(n, 0, 1)
y <- 2*x + e
data <- data.frame(x, y)
linreg <- lm(formula = y ~ x,
data = data)
linreg.predictions <- linreg$fitted.values
linreg.se <- predict(linreg, newdata = data, se.fit = T)$se.fit
rf <- ranger( formula = y ~ x,
data = data,
num.trees = 20,
keep.inbag = T)
new <- data.frame(x=rnorm(10))
rf.predict <- predict(rf, new, predict.all = T)
rf.predict2 <- RangerForestPredict(rf$forest,
new,
type='se',
predict.all = T,
inbag.counts = rf$inbag.counts)
rf.all.predictions <- rf.predict$predictions
rf.predictions <- rowMeans(rf.all.predictions)
rf2.all.predictions <- rf.predict2$predictions
rf2.predictions <- rowMeans(rf2.all.predictions)
rm(list=ls())
library(Matrix)
library(tidyverse)
library(ggplot2)
library(ggpubr)
library(ranger)
library(randomForest)
source('C:/Users/feix_/iCloudDrive/Studium Master/CQM - Thesis Internship/Thesis-VariableEffects/RangerPredictFunction.R')
set.seed(124)
n <- 200
x <- rnorm(n, 0, 1)
e <- rnorm(n, 0, 1)
y <- 2*x + e
data <- data.frame(x, y)
linreg <- lm(formula = y ~ x,
data = data)
linreg.predictions <- linreg$fitted.values
linreg.se <- predict(linreg, newdata = data, se.fit = T)$se.fit
rf <- ranger( formula = y ~ x,
data = data,
num.trees = 20,
keep.inbag = T)
new <- data.frame(x=rnorm(1))
rf.predict <- predict(rf, new, predict.all = T)
rf.predict2 <- RangerForestPredict(rf$forest,
new,
type='se',
predict.all = T,
inbag.counts = rf$inbag.counts)
rf.all.predictions <- rf.predict$predictions
rf.predictions <- rowMeans(rf.all.predictions)
rf2.all.predictions <- rf.predict2$predictions
rf2.predictions <- rowMeans(rf2.all.predictions)
rm(list=ls())
library(Matrix)
library(tidyverse)
library(ggplot2)
library(ggpubr)
library(ranger)
library(randomForest)
source('C:/Users/feix_/iCloudDrive/Studium Master/CQM - Thesis Internship/Thesis-VariableEffects/RangerPredictFunction.R')
set.seed(124)
n <- 200
x <- rnorm(n, 0, 1)
e <- rnorm(n, 0, 1)
y <- 2*x + e
data <- data.frame(x, y)
linreg <- lm(formula = y ~ x,
data = data)
linreg.predictions <- linreg$fitted.values
linreg.se <- predict(linreg, newdata = data, se.fit = T)$se.fit
rf <- ranger( formula = y ~ x,
data = data,
num.trees = 20,
keep.inbag = T)
new <- data.frame(x=rnorm(1))
rf.predict <- predict(rf, new, predict.all = T)
rf.predict2 <- RangerForestPredict(rf$forest,
new,
type='se',
predict.all = T,
inbag.counts = rf$inbag.counts)
rf.all.predictions <- rf.predict$predictions
rf.predictions <- rowMeans(rf.all.predictions)
rf2.all.predictions <- rf.predict2$predictions
rf2.predictions <- rowMeans(rf2.all.predictions)
rm(list=ls())
library(Matrix)
library(tidyverse)
library(ggplot2)
library(ggpubr)
library(ranger)
library(randomForest)
source('C:/Users/feix_/iCloudDrive/Studium Master/CQM - Thesis Internship/Thesis-VariableEffects/RangerPredictFunction.R')
set.seed(124)
n <- 200
x <- rnorm(n, 0, 1)
e <- rnorm(n, 0, 1)
y <- 2*x + e
data <- data.frame(x, y)
linreg <- lm(formula = y ~ x,
data = data)
linreg.predictions <- linreg$fitted.values
linreg.se <- predict(linreg, newdata = data, se.fit = T)$se.fit
rf <- ranger( formula = y ~ x,
data = data,
num.trees = 20,
keep.inbag = T)
new <- data.frame(x=rnorm(2))
rf.predict <- predict(rf, new, predict.all = T)
rf.predict2 <- RangerForestPredict(rf$forest,
new,
type='se',
predict.all = T,
inbag.counts = rf$inbag.counts)
rf.all.predictions <- rf.predict$predictions
rf.predictions <- rowMeans(rf.all.predictions)
rf2.all.predictions <- rf.predict2$predictions
rf2.predictions <- rowMeans(rf2.all.predictions)
rm(list=ls())
library(Matrix)
library(tidyverse)
library(ggplot2)
library(ggpubr)
library(ranger)
library(randomForest)
source('C:/Users/feix_/iCloudDrive/Studium Master/CQM - Thesis Internship/Thesis-VariableEffects/RangerPredictFunction.R')
set.seed(124)
n <- 200
x <- rnorm(n, 0, 1)
e <- rnorm(n, 0, 1)
y <- 2*x + e
data <- data.frame(x, y)
linreg <- lm(formula = y ~ x,
data = data)
linreg.predictions <- linreg$fitted.values
linreg.se <- predict(linreg, newdata = data, se.fit = T)$se.fit
rf <- ranger( formula = y ~ x,
data = data,
num.trees = 20,
keep.inbag = T)
new <- data.frame(x=rnorm(1))
rf.predict <- predict(rf, new, predict.all = T)
rf.predict2 <- RangerForestPredict(rf$forest,
new,
type='se',
predict.all = T,
inbag.counts = rf$inbag.counts)
rf.all.predictions <- rf.predict$predictions
rf.predictions <- rowMeans(rf.all.predictions)
rf2.all.predictions <- rf.predict2$predictions
rf2.predictions <- rowMeans(rf2.all.predictions)
source("C:/Users/feix_/iCloudDrive/Studium Master/CQM - Thesis Internship/Thesis-VariableEffects/Coviariance RF Predictions.R", echo=TRUE)
rm(list=ls())
library(Matrix)
library(tidyverse)
library(ggplot2)
library(ggpubr)
library(ranger)
library(randomForest)
source('C:/Users/feix_/iCloudDrive/Studium Master/CQM - Thesis Internship/Thesis-VariableEffects/RangerPredictFunction.R')
set.seed(124)
n <- 200
x <- rnorm(n, 0, 1)
e <- rnorm(n, 0, 1)
y <- 2*x + e
data <- data.frame(x, y)
linreg <- lm(formula = y ~ x,
data = data)
linreg.predictions <- linreg$fitted.values
linreg.se <- predict(linreg, newdata = data, se.fit = T)$se.fit
rf <- ranger( formula = y ~ x,
data = data,
num.trees = 20,
keep.inbag = T)
new <- data.frame(x=rnorm(3))
rf.predict <- predict(rf, new, predict.all = T)
rf.predict2 <- RangerForestPredict(rf$forest,
new,
type='se',
predict.all = T,
inbag.counts = rf$inbag.counts)
rf.all.predictions <- rf.predict$predictions
rf.predictions <- rowMeans(rf.all.predictions)
rf2.all.predictions <- rf.predict2$predictions
rf2.predictions <- rowMeans(rf2.all.predictions)
hi <- NULL
!is.null(hi)
hi <- 5
!is.null(hi)
hi <- data.frame(x= rnorm(2))
hi
is.data.frame(hi)
ho <- 5
is.data.frame(ho)
!is.data.frame(ho)
type(hi)
class(hi)
rm(list=ls())
library(Matrix)
library(tidyverse)
library(ggplot2)
library(ggpubr)
library(ranger)
library(randomForest)
source('C:/Users/feix_/iCloudDrive/Studium Master/CQM - Thesis Internship/Thesis-VariableEffects/RangerPredictFunction.R')
set.seed(124)
n <- 200
x <- rnorm(n, 0, 1)
e <- rnorm(n, 0, 1)
y <- 2*x + e
data <- data.frame(x, y)
linreg <- lm(formula = y ~ x,
data = data)
linreg.predictions <- linreg$fitted.values
linreg.se <- predict(linreg, newdata = data, se.fit = T)$se.fit
rf <- ranger( formula = y ~ x,
data = data,
num.trees = 20,
keep.inbag = T)
new <- data.frame(x=rnorm(3))
rf.predict <- predict(rf, new, predict.all = T)
rf.predict2 <- RangerForestPredict(rf$forest,
new,
type='cov',
predict.all = T,
inbag.counts = rf$inbag.counts)
rm(list=ls())
library(Matrix)
library(tidyverse)
library(ggplot2)
library(ggpubr)
library(ranger)
library(randomForest)
source('C:/Users/feix_/iCloudDrive/Studium Master/CQM - Thesis Internship/Thesis-VariableEffects/RangerPredictFunction.R')
set.seed(124)
n <- 200
x <- rnorm(n, 0, 1)
e <- rnorm(n, 0, 1)
y <- 2*x + e
data <- data.frame(x, y)
linreg <- lm(formula = y ~ x,
data = data)
linreg.predictions <- linreg$fitted.values
linreg.se <- predict(linreg, newdata = data, se.fit = T)$se.fit
rf <- ranger( formula = y ~ x,
data = data,
num.trees = 20,
keep.inbag = T)
new <- data.frame(x=rnorm(3))
rf.predict <- predict(rf, new, predict.all = T)
rf.predict2 <- RangerForestPredict(rf$forest,
new,
type='cov',
predict.all = T,
inbag.counts = rf$inbag.counts)
rm(list=ls())
library(Matrix)
library(tidyverse)
library(ggplot2)
library(ggpubr)
library(ranger)
library(randomForest)
source('C:/Users/feix_/iCloudDrive/Studium Master/CQM - Thesis Internship/Thesis-VariableEffects/RangerPredictFunction.R')
set.seed(124)
n <- 200
x <- rnorm(n, 0, 1)
e <- rnorm(n, 0, 1)
y <- 2*x + e
data <- data.frame(x, y)
linreg <- lm(formula = y ~ x,
data = data)
linreg.predictions <- linreg$fitted.values
linreg.se <- predict(linreg, newdata = data, se.fit = T)$se.fit
rf <- ranger( formula = y ~ x,
data = data,
num.trees = 20,
keep.inbag = T)
new <- data.frame(x=rnorm(3))
rf.predict <- predict(rf, new, predict.all = T)
rf.predict2 <- RangerForestPredict(rf$forest,
new,
type='se',
predict.all = T,
inbag.counts = rf$inbag.counts)
rm(list=ls())
library(Matrix)
library(tidyverse)
library(ggplot2)
library(ggpubr)
library(ranger)
library(randomForest)
source('C:/Users/feix_/iCloudDrive/Studium Master/CQM - Thesis Internship/Thesis-VariableEffects/RangerPredictFunction.R')
set.seed(124)
n <- 200
x <- rnorm(n, 0, 1)
e <- rnorm(n, 0, 1)
y <- 2*x + e
data <- data.frame(x, y)
linreg <- lm(formula = y ~ x,
data = data)
linreg.predictions <- linreg$fitted.values
linreg.se <- predict(linreg, newdata = data, se.fit = T)$se.fit
rf <- ranger( formula = y ~ x,
data = data,
num.trees = 20,
keep.inbag = T)
new <- data.frame(x=rnorm(3))
rf.predict <- predict(rf, new, predict.all = T)
rf.predict2 <- RangerForestPredict(rf$forest,
new,
type='cov',
predict.all = T,
inbag.counts = rf$inbag.counts)
rm(list=ls())
library(Matrix)
library(tidyverse)
library(ggplot2)
library(ggpubr)
library(ranger)
library(randomForest)
source('C:/Users/feix_/iCloudDrive/Studium Master/CQM - Thesis Internship/Thesis-VariableEffects/RangerPredictFunction.R')
set.seed(124)
n <- 200
x <- rnorm(n, 0, 1)
e <- rnorm(n, 0, 1)
y <- 2*x + e
data <- data.frame(x, y)
linreg <- lm(formula = y ~ x,
data = data)
linreg.predictions <- linreg$fitted.values
linreg.se <- predict(linreg, newdata = data, se.fit = T)$se.fit
rf <- ranger( formula = y ~ x,
data = data,
num.trees = 20,
keep.inbag = T)
new <- data.frame(x=rnorm(3))
rf.predict <- predict(rf, new, predict.all = T)
rf.predict2 <- RangerForestPredict(rf$forest,
new,
type='cov',
predict.all = T,
inbag.counts = rf$inbag.counts)
source("C:/Users/feix_/iCloudDrive/Studium Master/CQM - Thesis Internship/Thesis-VariableEffects/Covariance - Show Case.R", echo=TRUE)
source("C:/Users/feix_/iCloudDrive/Studium Master/CQM - Thesis Internship/Thesis-VariableEffects/Covariance - Show Case.R", echo=TRUE)
source("C:/Users/feix_/iCloudDrive/Studium Master/CQM - Thesis Internship/Thesis-VariableEffects/Covariance - Show Case.R", echo=TRUE)
rm(list=ls())
setwd('C://Users/feix_//iCloudDrive//Studium Master//CQM - Thesis Internship//Thesis-VariableEffects')
source('C:/Users/feix_/iCloudDrive/Studium Master/CQM - Thesis Internship/Thesis-VariableEffects/Coviariance RF Predictions.R')
library(parallel)
cores <- detectCores()
clust <- makeCluster(cores)
# Export all objects in R-Script 'Covariance Predictions R'
parallel::clusterEvalQ(clust,
expr = {source('C:/Users/feix_/iCloudDrive/Studium Master/CQM - Thesis Internship/Thesis-VariableEffects/Coviariance RF Predictions.R')})
###### Simulation Setup
formulas <- c("2*x+e", "2*-x^2+e", "3*sqrt(abs(x))+3*x+e")
n <- c(100, 200, 500)
n.trees <- c(50, 100, 200, 500)
repeats <- 1e3
scenarios <- data.frame(expand.grid(n, n.trees, formulas, repeats))
colnames(scenarios) = c("N", "N_Trees", "Formula", "Repeats")
scenarios[,"Formula"] <- as.character(scenarios[,"Formula"]) ### Formula became Factor
scenarios <- split(scenarios, seq(nrow(scenarios)))
# Simulate
system.time(result <- parLapply(cl = clust,
X = scenarios,
fun = sim_multi))
source("C:/Users/feix_/iCloudDrive/Studium Master/CQM - Thesis Internship/Thesis-VariableEffects/MY_SIMULATION.R", echo=TRUE)
rm(list=ls())
setwd('C://Users/feix_//iCloudDrive//Studium Master//CQM - Thesis Internship//Thesis-VariableEffects')
source('C:/Users/feix_/iCloudDrive/Studium Master/CQM - Thesis Internship/Thesis-VariableEffects/Coviariance RF Predictions.R')
library(parallel)
cores <- detectCores()
clust <- makeCluster(cores)
# Export all objects in R-Script 'Covariance Predictions R'
parallel::clusterEvalQ(clust,
expr = {source('C:/Users/feix_/iCloudDrive/Studium Master/CQM - Thesis Internship/Thesis-VariableEffects/Coviariance RF Predictions.R')})
